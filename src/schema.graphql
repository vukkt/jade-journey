type Merchant {
	id: ID!
	email: String!
	storeName: String!
	products: [Product!]!
}

type Product {
	id: ID!
	title: String!
	description: String
	images: [String!]!
	price: Int!
	variants: [Variant!]!
	merchant: Merchant!
}

type Variant {
	id: ID!
	sku: String!
	price: Int!
	inventoryQuantity: Int!
	product: Product!
}

type Collection {
	id: ID!
	title: String!
	products: [Product!]!
}

type Customer {
	id: ID!
	email: String!
	orders: [Order!]!
}

type Order {
	id: ID!
	totalAmount: Int!
	status: String!
	orderItems: [OrderItem!]!
	customer: Customer!
}

type OrderItem {
	id: ID!
	quantity: Int!
	product: Product!
}

type Query {
	products: [Product!]!
	product(id: ID!): Product
	merchant(id: ID!): Merchant
	collections: [Collection!]!
	collection(id: ID!): Collection
}

type Mutation {
	createMerchant(
		email: String!
		password: String!
		storeName: String!
	): Merchant!
	createProduct(merchantId: ID!, title: String!, price: Int!): Product!
}

schema {
	query: Query
	mutation: Mutation
}
